[{"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ProductModal.js":"1","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\AddModal.js":"2","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\index.js":"3","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\AddProjectModal.js":"4","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ContactTable.js":"5","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\create-project.component.js":"6","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ProjectTable.js":"7","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\edit-products.component.js":"8","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\create-product.component.js":"9","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\products-list.component.js":"10","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\App.js":"11","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\reportWebVitals.js":"12","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ContactModal.js":"13","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\EditContactForm.js":"14","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ProductTable.js":"15","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\navbar.component.js":"16","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\util\\firebase.js":"17"},{"size":4890,"mtime":1616935806175,"results":"18","hashOfConfig":"19"},{"size":3820,"mtime":1608707069880,"results":"20","hashOfConfig":"19"},{"size":710,"mtime":1608669769333,"results":"21","hashOfConfig":"19"},{"size":2495,"mtime":1608662260144,"results":"22","hashOfConfig":"19"},{"size":5400,"mtime":1608682150343,"results":"23","hashOfConfig":"19"},{"size":1427,"mtime":1617540208656,"results":"24","hashOfConfig":"19"},{"size":9438,"mtime":1608719710649,"results":"25","hashOfConfig":"19"},{"size":4051,"mtime":1617540681659,"results":"26","hashOfConfig":"19"},{"size":4676,"mtime":1617550660878,"results":"27","hashOfConfig":"19"},{"size":1984,"mtime":1617540724160,"results":"28","hashOfConfig":"19"},{"size":6115,"mtime":1617541074378,"results":"29","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"19"},{"size":3995,"mtime":1608679610187,"results":"31","hashOfConfig":"19"},{"size":1593,"mtime":1607975718089,"results":"32","hashOfConfig":"19"},{"size":5748,"mtime":1608712354654,"results":"33","hashOfConfig":"19"},{"size":838,"mtime":1616943233581,"results":"34","hashOfConfig":"19"},{"size":1024,"mtime":1608709727827,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1e83lft",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ProductModal.js",["82","83"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, FormControl } from 'react-bootstrap';\r\nimport firebase from './util/firebase';\r\n\r\n//let optionSet = [];\r\nexport class ProductModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.projectRef = React.createRef();\r\n\r\n    this.state = {\r\n      optionSet: [],\r\n      inputName: '',\r\n      inputPrice: '',\r\n      inputQuantity: '',\r\n      inputDescription: ''\r\n    }\r\n  }\r\n\r\n  updateNameValue(evt) {\r\n    this.setState({\r\n      inputName: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(e) {\r\n    this.setState({\r\n      inputDescription: e.target.value,\r\n    })\r\n  }\r\n\r\n  updatePriceValue(ev) {\r\n    this.setState({\r\n      inputPrice: ev.target.value,\r\n    })\r\n  }\r\n\r\n  updateQuantityValue(ev2) {\r\n    this.setState({\r\n      inputQuantity: ev2.target.value,\r\n    })\r\n  }\r\n\r\n  getProjectList(){\r\n    let optionSetlet = [];\r\n    firebase.database().ref(\"TESTINIS-ProjectsList\").on('value', (snapshot) => {\r\n      snapshot.forEach(snap => {\r\n        optionSetlet.push(snap.val().pavadinimas);\r\n      });\r\n    });\r\n     //this.setState.optionSet = optionSet;\r\n     //optionSet: this.setState({ optionSet: optionsetlet })\r\n    console.log(\"optset \" + optionSetlet);\r\n  }\r\n\r\n  AddProductToDb() {\r\n    //datos\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    let pavadinimas = this.state.inputName;\r\n    let aprasymas = this.state.inputDescription;\r\n    let kiekis = this.state.inputQuantity;\r\n    let kaina = this.state.inputPrice;\r\n    let projektas = this.projectRef.current.value;\r\n    let suma = kiekis * kaina;\r\n    let recId = 'temp';\r\n    let sukurimodata = today;\r\n    console.log(pavadinimas + \" \" + aprasymas + \" \" + kiekis + \" \" + kaina + \" \" + projektas + \" \" + suma);\r\n\r\n    /**/const todoRef = firebase.database().ref('ProductsLists');\r\n    const produktasDB = {\r\n      pavadinimas, aprasymas, kiekis, kaina, projektas, suma, recId, sukurimodata\r\n    };\r\n\r\n    let permId = todoRef.push(produktasDB).key;\r\n    todoRef.child(permId).update({ recId: permId });\r\n    //CIA KAZKUR UPDATINTI PROJEKTO SUMA\r\n\r\n    //const projDB = firebase.database().ref('TESTINIS-ProjectsList');\r\n    //let projectId = '', projectSum = '';\r\n  /*  projDB.orderByChild(\"pavadinimas\").equalTo(projektas).on(\"value\", function(snapshot) {\r\n      //console.log(\"query \" + snapshot.key);\r\n      \r\n      snapshot.forEach(function (childSnapshot) {\r\n        var childKey = childSnapshot.key;\r\n        var childData = childSnapshot.val().nuolaida;\r\n        projectId = childKey;\r\n        projectSum = childSnapshot.val().projektoSuma + suma;\r\n        console.log(\"query3 \"+ childData + \" \" + childKey);\r\n        \r\n        \r\n      \r\n    });*/\r\n      //console.log(\"query2 \" + snapshot.val().pavadinimas);\r\n    //});\r\n    //console.log(permId);\r\n    /**/\r\n\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.setState.optionSet);\r\n    return (\r\n      <Modal\r\n\r\n\r\n        {...this.props}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormControl value={this.state.inputName} onChange={evt => this.updateNameValue(evt)}\r\n            placeholder=\"Name\"\r\n            aria-label=\"Name\"\r\n          />\r\n          <FormControl value={this.state.inputPrice} onChange={ev => this.updatePriceValue(ev)}\r\n            placeholder=\"Price\"\r\n            aria-label=\"Price\"\r\n          />\r\n          <FormControl value={this.state.inputQuantity} onChange={ev2 => this.updateQuantityValue(ev2)}\r\n            placeholder=\"Quantity\"\r\n            aria-label=\"Quantity\"\r\n          />\r\n\r\n          <FormControl as=\"select\" custom ref={this.projectRef}>\r\n            <option value=\"Projektas 1\">Projektas 1</option>\r\n            <option value=\"Projektas 2\">Projektas 2</option>\r\n            <option value=\"Projektas 3\">Projektas 3</option>\r\n            <option value=\"Projektas 4\">Projektas 4</option>\r\n\r\n            {this.state.optionSet.map(data => {\r\n              return (\r\n                <option value={data}>{data}</option>\r\n              )\r\n            }\r\n            )}\r\n\r\n\r\n          </FormControl>\r\n\r\n          <FormControl value={this.state.inputDescription} onChange={e => this.updateDescriptionValue(e)}\r\n            placeholder=\"Description\" as=\"textarea\"\r\n            aria-label=\"Description\"\r\n          />\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onHide}>\r\n            Atsaukti\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => this.AddProductToDb()}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n}",["84","85"],"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\AddModal.js",["86","87"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, FormControl} from 'react-bootstrap';\r\nimport firebase from './util/firebase';\r\n\r\nexport class AddModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.BusenaRef = React.createRef();\r\n    this.state = {\r\n      inputProject: '',\r\n      inputDescription: '',\r\n      inputNuolaida: ''\r\n    }\r\n  }\r\n\r\n  updateInputValue(evt) {\r\n    this.setState({\r\n      inputProject: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(e) {\r\n    this.setState({\r\n      inputDescription: e.target.value,\r\n    })\r\n  }\r\n\r\n  updateNuolaidaValue(ev) {\r\n    this.setState({\r\n      inputNuolaida: ev.target.value,\r\n    })\r\n  }\r\n\r\n  AddProjectToDb() {\r\n//datos\r\nvar today = new Date();\r\nvar dd = String(today.getDate()).padStart(2, '0');\r\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nvar yyyy = today.getFullYear();\r\n\r\ntoday = yyyy + '-' + mm + '-' + dd;\r\n\r\n    let pavadinimas = this.state.inputProject;\r\n    let aprasymas = this.state.inputDescription;\r\n    let nuolaida = this.state.inputNuolaida;\r\n    let kontaktas = this.myRef.current.value;\r\n    let busena = this.BusenaRef.current.value;\r\n    let recId = 'temp';\r\n    let sukurimodata = today;\r\n    let projektoSuma = 0;\r\n    console.log(pavadinimas +\" \"+ aprasymas +\" \"+ nuolaida +\" \"+ kontaktas +\" \"+ busena +\" \"+ today +\" \"+ projektoSuma);\r\n    \r\n    \r\n    /**/const todoRef = firebase.database().ref('TESTINIS-ProjectsList');\r\n     const projektasDB = {\r\n     pavadinimas,\r\n    aprasymas,\r\n    kontaktas,\r\n    nuolaida,\r\n    busena,\r\n    recId,\r\n    sukurimodata,\r\n    projektoSuma\r\n     };\r\n\r\n    let permId = todoRef.push(projektasDB).key;\r\n    todoRef.child(permId).update({recId: permId});\r\n    console.log(permId);\r\n    /**/\r\n\r\n  }\r\n\r\n  /*\r\n  po pirmos modal eilutes \r\n  show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          \r\n          secondary variant button onClick={handleClose}*/\r\n  render() {\r\n    return (\r\n      <Modal\r\n\r\n\r\n        {...this.props}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Project</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormControl value={this.state.inputProject} onChange={evt => this.updateInputValue(evt)}\r\n            placeholder=\"Pavadinimas\"\r\n            aria-label=\"Pavadinimas\"\r\n          />\r\n          <FormControl value={this.state.inputDescription} onChange={e => this.updateDescriptionValue(e)}\r\n            placeholder={\"Aprašymas\"}\r\n            aria-label=\"Aprasymas\" as=\"textarea\"\r\n          />\r\n          <FormControl as=\"select\" custom ref={this.myRef}>\r\n            <option value=\"Jonas Jonaitis\">Jonas Jonaitis</option>\r\n            <option value=\"amber\">Petras Petraitis</option>\r\n            <option value=\"purple\">Kontaktas2</option>\r\n            <option value=\"magenta\">Kontaktas2</option>\r\n          </FormControl>\r\n\r\n          <FormControl value={this.state.inputNuolaida} onChange={ev => this.updateNuolaidaValue(ev)}\r\n            placeholder=\"Nuolaida\"\r\n            aria-label=\"Nuolaida\"\r\n          />\r\n\r\n          <FormControl as=\"select\" custom ref={this.BusenaRef}>\r\n            <option value=\"Pradėtas\">Pradėtas</option>\r\n            <option value=\"amber\">Vykdomas</option>\r\n            <option value=\"purple\">Pabaigtas</option>\r\n            <option value=\"magenta\">Atšauktas</option>\r\n          </FormControl>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onHide}>\r\n            Atsaukti\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => this.AddProjectToDb()}>Saugoti</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n}","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\index.js",[],"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\AddProjectModal.js",["88","89","90","91","92","93"],"import React, { useState } from 'react';\r\nimport firebase from './util/firebase';\r\nimport { Modal, Button, Row, Col, Form, FormControl, Dropdown } from 'react-bootstrap';\r\n\r\nexport default function AddProject() {\r\n  const [pavadinimas, setPavadinimas, aprasymas, setAprasymas, kontaktas, setKontaktas, nuolaida, setNuolaida, busena, setBusena] = useState('');\r\n\r\n  /*const handleOnChange = (e) => {\r\n      setTitle(e.target.value);\r\n  };*/\r\n\r\n  const createProject = () => {\r\n    const todoRef = firebase.database().ref('ProjectsList');\r\n    const projektasDB = {\r\n      pavadinimas,\r\n      aprasymas,\r\n      kontaktas,\r\n      nuolaida,\r\n      busena,\r\n    };\r\n\r\n    todoRef.push(projektasDB);\r\n  }\r\n  return (\r\n    <Modal\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Modal title</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <FormControl onChange={e => setPavadinimas(e.target.value)} value={pavadinimas}\r\n          placeholder=\"Pavadinimas\"\r\n          aria-label=\"Pavadinimas\"\r\n        />\r\n        <FormControl onChange={e => setAprasymas(e.target.value)} value={aprasymas}\r\n          placeholder=\"Aprašymas\"\r\n          aria-label=\"Aprasymas\"\r\n        />\r\n        <Dropdown >\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n            Kontaktas\r\n</Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <FormControl\r\n          placeholder=\"Nuolaida\"\r\n          aria-label=\"Nuolaida\"\r\n        />\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n            Būsena\r\n</Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"#/action-1\">Pradėtas</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-2\">Vykdomas</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-3\">Pabaigtas</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-3\">Atšauktas</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={this.props.onHide}>\r\n          Atsaukti\r\n      </Button>\r\n        <Button variant=\"primary\" onClick={createProject}>Saugoti</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ContactTable.js",["94","95","96","97","98"],"import React, { Component } from 'react'\r\n//import { Table, Button, Modal, Alert } from 'reactstrap';\r\nimport firebase from './util/firebase';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Modal, Button, Row, Col, Form, FormControl, ProgressBar } from 'react-bootstrap';\r\n\r\nconst contactColumns = [{\r\n  dataField: 'vardas',\r\n  text: 'First Name'\r\n}, {\r\n  dataField: 'pavarde',\r\n  text: 'Last Name'\r\n}, {\r\n  dataField: 'pastas',\r\n  text: 'Email'\r\n}, {\r\n  dataField: 'telefonas',\r\n  text: 'Phone'\r\n}, {\r\n  dataField: 'pareigos',\r\n  text: 'Job Position'\r\n}, {\r\n  dataField: 'adresas',\r\n  text: 'Address'\r\n},];\r\n\r\nexport class ContactTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      contactList: [],\r\n\r\n      depsPrj: [], contactModalShow: false,\r\n      show: false,\r\n      vardas: '',\r\n      pavarde: '',\r\n      telefonas: '',\r\n      pastas: '',\r\n      adresas: '',\r\n      pareigos: '',\r\n      kontaktoId: '',\r\n      deleteConfirm: false,\r\n    }\r\n\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = e => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: true });\r\n  };\r\n\r\n  hideConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: false });\r\n  };\r\n\r\n  updateFirstNameValue(evt) {\r\n    this.setState({\r\n      vardas: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateLastNameValue(evt2) {\r\n    this.setState({\r\n      pavarde: evt2.target.value,\r\n    })\r\n  }\r\n\r\n  updatePhoneValue(evt3) {\r\n    this.setState({\r\n      telefonas: evt3.target.value,\r\n    })\r\n  }\r\n\r\n  updateEmailValue(evt4) {\r\n    this.setState({\r\n      pastas: evt4.target.value,\r\n    })\r\n  }\r\n\r\n  updateJobPositionValue(evt5) {\r\n    this.setState({\r\n      pareigos: evt5.target.value,\r\n    })\r\n  }\r\n\r\n  updateAddressValue(evt6) {\r\n    this.setState({\r\n      adresas: evt6.target.value,\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    var db = firebase.database().ref(\"ContactLists\");\r\n    db.child(this.state.kontaktoId).update({\r\n      vardas: this.state.vardas, pavarde: this.state.pavarde, pastas: this.state.pastas,\r\n      telefonas: this.state.telefonas, pareigos: this.state.pareigos, adresas: this.state.adresas,\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    var db = firebase.database().ref(\"ContactLists\");\r\n    db.child(this.state.kontaktoId).remove();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ contactList: [] });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var counter = 0;\r\n    this.setState({ contactList: [] });\r\n    firebase.database().ref(\"ContactLists\").on('value', (snapshot) => {\r\n      let contactList = [];\r\n      snapshot.forEach(snap => {\r\n        counter++;\r\n        console.log(snap.val());\r\n        console.log(snap.key);//recod id!!!\r\n        contactList.push(snap.val());\r\n      });\r\n      this.setState({ contactList: contactList });\r\n    });\r\n    console.log(counter);\r\n  }\r\n\r\n  render() {\r\n    const { depsPrj } = this.state;\r\n\r\n    const rowEvents = {\r\n      onClick: (e, row) => {\r\n        console.log(row);\r\n        this.setState({\r\n          vardas: row.vardas,\r\n          pavarde: row.pavarde,\r\n          telefonas: row.telefonas,\r\n          pastas: row.pastas,\r\n          pareigos: row.pareigos,\r\n          adresas: row.adresas,\r\n          kontaktoId: row.recId,\r\n        });\r\n\r\n        console.log(this.state.vardas);\r\n        console.log(this.state.kontaktoId);\r\n        this.showModal();\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Modal show={this.state.deleteConfirm} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Do you Really want to Delete this record?</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.setState({ deleteConfirm: false })}>Cancel</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onDelete()}>Confirm</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={this.state.show} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Contact</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FormControl onChange={evt => this.updateFirstNameValue(evt)} value={this.state.vardas} />\r\n            <FormControl onChange={evt => this.updateLastNameValue(evt)} value={this.state.pavarde} />\r\n            <FormControl onChange={evt => this.updateEmailValue(evt)} value={this.state.pastas} />\r\n            <FormControl onChange={evt => this.updatePhoneValue(evt)} value={this.state.telefonas} />\r\n            <FormControl onChange={evt => this.updateJobPositionValue(evt)} value={this.state.pareigos} />\r\n            <FormControl onChange={evt => this.updateAddressValue(evt)} value={this.state.adresas} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\r\n            <Button variant=\"primary\" onClick={() => this.onUpdate()}>Update</Button>\r\n            <Button variant=\"danger\" onClick={() => this.showConfirmDelete()}>Delete</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <BootstrapTable keyField='id' data={this.state.contactList} columns={contactColumns} rowEvents={rowEvents} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactTable","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\create-project.component.js",["99"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateProject extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username\r\n    }\r\n\r\n    console.log(user);\r\n\r\n    axios.post('http://localhost:5000/users/add', user)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      username: ''\r\n    })\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi create projects</p>\r\n        </div>\r\n      /*<div>\r\n        <h3>Create New User</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </div>*/\r\n    )\r\n  }\r\n}","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ProjectTable.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React, { Component } from 'react'\r\n//import { Table, Button, Modal } from 'reactstrap';\r\nimport firebase from './util/firebase';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Modal, Button, Row, Col, Form, FormControl, ProgressBar } from 'react-bootstrap';\r\n\r\n//const projectList = [\r\n  /*{\r\n     \"id\": \"10\",\r\n     \"name\": \"minivan\",\r\n     \"price\": 333\r\n     \r\n   }*/\r\n//];\r\n\r\n\r\nconst projectColumns = [/*{\r\n  dataField: 'id',\r\n  text: 'Product ID'\r\n},*/ {\r\n  dataField: 'pavadinimas',\r\n  text: 'Pavadinimas'\r\n}, {\r\n  dataField: 'aprasymas',\r\n  text: 'Aprašymas'\r\n}, {\r\n  dataField: 'projektoSuma',\r\n  text: 'Suma'\r\n}, {\r\n  dataField: 'kontaktas',\r\n  text: 'Kontaktas'\r\n}, {\r\n  dataField: 'nuolaida',\r\n  text: 'Nuolaida'\r\n}, {\r\n  dataField: 'sukurimodata',\r\n  text: 'Sukūrimo Data'\r\n}, {\r\n  dataField: 'busena',\r\n  text: 'Būsena'\r\n},];\r\n\r\n/*const toggleTrueFalse = () => {\r\n  setShowModal(this.handleShow());\r\n};*/\r\n\r\nexport class ProjectTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.myRef = React.createRef();\r\n    this.BusenaRef = React.createRef();\r\n\r\n    this.state = {\r\n     // message: 'hello',\r\n      //ProjectList: [],\r\n      optionSet: [],\r\n      projectList: [],\r\n\r\n      depsPrj: [], projectModalShow: false,\r\n      show: false,\r\n      pavadinimas: '',\r\n      aprasymas: '',\r\n      busena: '',\r\n      kontaktas: '',\r\n      nuolaida: '',\r\n      projektoId: '',\r\n      deleteConfirm: false,\r\n    }\r\n\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = e => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: true });\r\n  };\r\n\r\n  hideConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: false });\r\n  };\r\n\r\n  updateInputValue(evt) {\r\n    this.setState({\r\n      pavadinimas: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateNuolaidaValue(evt2) {\r\n    this.setState({\r\n      nuolaida: evt2.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(evt3) {\r\n    this.setState({\r\n      aprasymas: evt3.target.value,\r\n    })\r\n  }\r\n\r\n  updateStatusValue(evt4) {\r\n    this.setState({\r\n      busena: evt4.target.value,\r\n    })\r\n  }\r\n\r\n  updateContactValue(evt5) {\r\n    this.setState({\r\n      kontaktas: evt5.target.value,\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    var db = firebase.database().ref(\"TESTINIS-ProjectsList\");\r\n    db.child(this.state.projektoId).update({\r\n      pavadinimas: this.state.pavadinimas, aprasymas: this.state.aprasymas,\r\n      kontaktas: this.myRef.current.value, nuolaida: this.state.nuolaida, busena: this.BusenaRef.current.value\r\n    }); //geras\r\n  }\r\n\r\n  onDelete() {\r\n    var db = firebase.database().ref(\"TESTINIS-ProjectsList\");\r\n    db.child(this.state.projektoId).remove();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ projectList: [] });\r\n  }\r\n\r\n  /*getSnapshotBeforeUpdate(prevProps) {\r\n    return { sortYN: prevProps.data3 !== this.props.data3 };\r\n  }*/\r\n\r\n  componentDidMount() {\r\n    const newBugs = this.props.data3;\r\n    console.log(\"another comp \" + /*this.props.data3*/newBugs);\r\n\r\n    //console.log(\"prewprops::: \" + prevProps);\r\n    var counter = 0;\r\n    let optionSet = [];\r\n    this.setState({ projectList: [] });\r\n    firebase.database().ref(\"TESTINIS-ProjectsList\").orderByChild(\"pavadinimas\").on('value', (snapshot) => {\r\n      //let ProjectList = [];\r\n      let projectList = [];\r\n      \r\n      snapshot.forEach(snap => {\r\n        // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n        //ProjectList.push(snap.val());\r\n        counter++;\r\n        console.log(snap.val());\r\n        console.log(snap.key);//recod id!!!\r\n        projectList.push(snap.val());\r\n        //var object[counter] ={};\r\n        //optionSet.push(snap.val().kontaktas);\r\n\r\n      });\r\n      \r\n      if(!newBugs){projectList.reverse();}\r\n      \r\n      //this.setState({ ProjectList: ProjectList });\r\n      this.setState({ projectList: projectList });\r\n      //window.location.reload(false);\r\n    });\r\n    console.log(counter);\r\n    //console.log(optionSet);\r\n\r\n\r\n    //get products\r\n    /*firebase.database().ref(\"ContactLists\").on('value', (snapshot) => {\r\n      snapshot.forEach(snap => {\r\n        optionSet.push(snap.val().vardas);\r\n        optionSet.push(snap.val().pavarde);\r\n      });\r\n    });\r\n    console.log(optionSet);*/\r\n  }\r\n\r\n  render() {\r\n    //const newBugs = this.props.data3;\r\n    \r\n    //console.log(\"another comp \" + /*this.props.data3*/newBugs);\r\n    const sortas = this.props.sortAZ;\r\n    let progress = 0;\r\n\r\n    if (this.state.busena == \"Pradėtas\") { progress = 33; } \r\n    else if (this.state.busena == \"Vykdomas\") { progress = 67; } \r\n    else if (this.state.busena == \"Pabaigtas\") { progress = 100; }\r\n    else progress = 0;\r\n\r\n    const { depsPrj } = this.state;\r\n    //let projectModalClose = () => this.setState({ projectModalShow: false });\r\n\r\n    const rowEvents = {\r\n      onClick: (e, row) => {\r\n        console.log(row);\r\n        this.setState({\r\n          pavadinimas: row.pavadinimas,\r\n          aprasymas: row.aprasymas,\r\n          busena: row.busena,\r\n          nuolaida: row.nuolaida,\r\n          kontaktas: row.kontaktas,\r\n          projektoId: row.recId,\r\n          // kontaktas: row.this.myRef.current.value,\r\n          busena: row.busena//this.BusenaRef.current.value\r\n        });\r\n\r\n        console.log(this.state.pavadinimas);\r\n        console.log(this.state.projektoId);\r\n        console.log(this.state.kontaktas + \" | \" + this.state.busena);\r\n        this.showModal();\r\n        //e => {this.showModal();}\r\n      },\r\n    };\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <Modal show={this.state.deleteConfirm} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Do you Really want to Delete this record?</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.setState({ deleteConfirm: false })}>Cancel</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onDelete()}>Confirm</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Modal show={this.state.show} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Project</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <ProgressBar now={progress} label={this.state.busena} />\r\n\r\n            <FormControl onChange={evt => this.updateInputValue(evt)} value={this.state.pavadinimas}\r\n            disabled={this.state.busena == \"Pabaigtas\" ? true : false} />\r\n\r\n            <FormControl onChange={evt => this.updateDescriptionValue(evt)} value={this.state.aprasymas}  as=\"textarea\"\r\n            disabled={this.state.busena == \"Pabaigtas\" ? true : false}/>\r\n\r\n            <FormControl as=\"select\" custom ref={this.myRef} disabled={this.state.busena == \"Pabaigtas\" ? true : false}>\r\n              <option value={this.state.kontaktas}>{this.state.kontaktas}</option>\r\n              <option value=\"petras petraitis\">Petras Petraitis</option>\r\n              <option value=\"purple p\">Paba</option>\r\n              <option value=\"magenta mag\">Atš</option>\r\n            </FormControl>\r\n\r\n            <FormControl onChange={evt => this.updateNuolaidaValue(evt)} value={this.state.nuolaida} \r\n            disabled={this.state.busena == \"Pabaigtas\" ? true : false}/>\r\n\r\n            <FormControl as=\"select\" custom ref={this.BusenaRef} disabled={this.state.busena == \"Pabaigtas\" ? true : false}>\r\n              <option value={this.state.busena}>{this.state.busena}</option>\r\n              <option value=\"Pradėtas\">Pradėtas</option>\r\n              <option value=\"Vykdomas\">Vykdomas</option>\r\n              <option value=\"Pabaigtas\">Pabaigtas</option>\r\n              <option value=\"Atšauktas\">Atšauktas</option>\r\n            </FormControl>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\r\n            <Button variant=\"primary\" onClick={() => this.onUpdate()}>Update</Button>\r\n            <Button variant=\"danger\" onClick={() => this.showConfirmDelete()}>Delete</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <BootstrapTable keyField='id' data={this.state.projectList/*projectList*/} columns={projectColumns} rowEvents={rowEvents} />\r\n        \r\n\r\n        {/*}  <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Pavadinimas</th>\r\n              <th>Aprašymas</th>\r\n              <th>Suma</th>\r\n              <th>Kontaktas</th>\r\n              <th>Nuolaida</th>\r\n              <th>Sukūrimo data</th>\r\n              <th>Būsena</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.ProjectList.map(data => {\r\n              return (\r\n                <tr onRowClick={console.log(\"smt\")}>\r\n                  <td>1</td>\r\n                  <td>{data.pavadinimas}</td>\r\n                  <td>{data.aprasymas}</td>\r\n                  <td>x</td>\r\n                  <td>{data.kontaktas}</td>\r\n                  <td>{data.nuolaida}</td>\r\n                  <td>x</td>\r\n                  <td>{data.busena}</td>\r\n                </tr>\r\n              )\r\n            }\r\n            )}\r\n          </tbody>\r\n        </Table>*/}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectTable","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\edit-products.component.js",["115"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import DatePicker from 'react-datepicker';\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class EditProduct extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/'+this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          username: response.data.username,\r\n          description: response.data.description,\r\n          duration: response.data.duration,\r\n          date: new Date(response.data.date)\r\n        })   \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(exercise);\r\n\r\n    axios.post('http://localhost:5000/exercises/update/' + this.props.match.params.id, exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi edit produkts</p>\r\n        </div>\r\n   /* <div>\r\n      <h3>Edit Exercise Log</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>*/\r\n    )\r\n  }\r\n}","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\create-product.component.js",["116"],"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\products-list.component.js",["117","118"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n/*const Exercise = props => (\r\n  <tr>\r\n    <td>{props.exercise.username}</td>\r\n    <td>{props.exercise.description}</td>\r\n    <td>{props.exercise.duration}</td>\r\n    <td>{props.exercise.date.substring(0,10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\"+props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)*/\r\n\r\nexport default class ProductsList extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteExercise = this.deleteExercise.bind(this)\r\n\r\n    this.state = {exercises: []};\r\n  }*/\r\n\r\n  /*componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/')\r\n      .then(response => {\r\n        this.setState({ exercises: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteExercise(id) {\r\n    axios.delete('http://localhost:5000/exercises/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n      exercises: this.state.exercises.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  exerciseList() {\r\n    return this.state.exercises.map(currentexercise => {\r\n      return <Exercise exercise={currentexercise} deleteExercise={this.deleteExercise} key={currentexercise._id}/>;\r\n    })\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi produktu liste</p>\r\n        </div>\r\n      /*<div>\r\n        <h3>Logged Exercises</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Description</th>\r\n              <th>Duration</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.exerciseList() }\r\n          </tbody>\r\n        </table>\r\n      </div>*/\r\n    )\r\n  }\r\n}","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\App.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { render } from \"react-dom\";\n//import {Table, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Table, Button, Modal } from 'reactstrap';\n//import Table from './Table';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport { AddModal } from './AddModal.js';\nimport { Navbar, Nav, NavDropdown, InputGroup, FormControl } from 'react-bootstrap';\nimport ContactTable from './ContactTable';\nimport ProjectTable from './ProjectTable';\nimport ProductTable from './ProductTable';\n//import { ReactComponent } from '*.svg';\nimport { ContactModal } from './ContactModal.js';\nimport { ProductModal } from './ProductModal.js';\nimport EditContactForm from './EditContactForm.js';\nimport firebase from './util/firebase';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport AddProject from './AddProjectModal';\n\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Navbar2 from \"./components/navbar.component\"\nimport ProductsList from \"./components/products-list.component\";\nimport EditProduct from \"./components/edit-products.component\";\nimport CreateProduct from \"./components/create-product.component\";\nimport CreateProject from \"./components/create-project.component\";\n\n/*function Example() {\n  const [show, setShow] = useState(false);\n\n    </>\n  );\n}*/\n\n//render(<Example />);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      deps: [], addModalShow: false,\n      deps2: [], contactModalShow: false,\n      deps3: [], productModalShow: false,\n      table: 'projectTable',\n      sortAZ: true\n    }\n    //const [show, setShow] = useState(false);\n\n    //const handleClose = () => setShow(false);\n    //const handleShow = () => setShow(true);\n  }\n\n  clickHandlerContact() {\n    this.setState({\n      table: 'contactTable'\n    })\n  }\n\n  clickHandlerProject() {\n    this.setState({\n      table: 'projectTable'\n    })\n  }\n\n  clickHandlerProduct() {\n    this.setState({\n      table: 'productTable'\n    })\n  }\n\n  sort(){\n    /*bugs =*/ this.setState(prevState => ({\n      sortAZ: !prevState.sortAZ\n    }));\n    //window.location.reload(false);\n  }\n  \n\n\n\n  render() {\n    const { deps } = this.state;\n    const { deps2 } = this.state;\n    const { deps3 } = this.state;\n    let addModalClose = () => this.setState({ addModalShow: false });\n    let contactModalClose = () => this.setState({ contactModalShow: false });\n    let productModalClose = () => this.setState({ productModalShow: false });\n    let testcomponentas;\n\n    console.log(\"Sort AZ? - \" + this.state.sortAZ);\n    //====\n    /*const products2 = [\n      {\n        \"id\": \"10\",\n        \"name\": \"minivan\",\n        \"price\": 333\n        \n      },\n      {\n        \"id\": \"10\",\n        \"name\": \"station wagon\",\n        \"price\": 100\n      }\n     ];\n    const columns2 = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];*/\n    //======\n\n\n    if (this.state.table == 'projectTable') {\n      testcomponentas = <ProjectTable data3={this.state.sortAZ}/>\n    } else if (this.state.table == 'productTable') {\n      testcomponentas = <ProductTable />\n    } else {\n      testcomponentas = <ContactTable />\n    }\n\n    return (\n      \n\n     \n\n     \n\n      <div>\n        {/*nurodzius kelia urkraus tam tikra komponenta pvz editproduct*/}\n <Router>\n      <div className=\"container\">\n      <Navbar2 />\n      <br/>\n      <Route path=\"/\" exact component={ProductsList} />\n      <Route path=\"/edit/:id\" component={EditProduct} />\n      <Route path=\"/create\" component={CreateProduct} />\n      <Route path=\"/project\" component={CreateProject} />\n      </div>\n    </Router>\n\n\n        {/*<Navbar fixed=\"top\" variant=\"dark\" bg=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Sales System</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link onClick={() => this.setState({ contactModalShow: true })} href=\"#link\">Add Contact</Nav.Link>\n              <Nav.Link onClick={() => this.setState({ addModalShow: true })} href=\"#link\">Create Project</Nav.Link>\n              <Nav.Link onClick={() => this.setState({ productModalShow: true })} href=\"#link\">Add Product</Nav.Link>\n              <Nav.Link onClick={() => this.sort()} href=\"#link\">Sort</Nav.Link>\n              {/* palikti sita komentara <Nav.Link href=\"#link\">Change Date/Currency format</Nav.Link>\n              <Nav.Link href=\"#link\">About</Nav.Link>*/}\n            {/*</Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n\n        <div className=\"splitleft\">\n\n          <Nav defaultActiveKey=\"/home\" className=\"navbar\">\n\n            <Nav.Link href=\"/home\">Active</Nav.Link>\n            <Nav.Link eventKey=\"link-1\" onClick={this.clickHandlerContact.bind(this)}>Contacts</Nav.Link>\n            <Nav.Link eventKey=\"link-2\" onClick={this.clickHandlerProject.bind(this)}>Projects</Nav.Link>\n            <Nav.Link eventKey=\"link-2\" onClick={this.clickHandlerProduct.bind(this)}>Products</Nav.Link>\n            {/* palikti sita komentara <Nav.Link eventKey=\"link-2\">Link</Nav.Link>*/}\n          {/*</Nav>\n\n\n          \n\n        </div>\n\n\n        \n\n        <div className=\"splitright\">\n\n          <div style={{ margin: \"20px 20px 20px 20px\" }}>\n {/* palikti sita komentararender(<Example />);*/}\n\n        {/* palikti sita komentara <EditContactForm/>  <BootstrapTable keyField='id' data={ products2 } columns={ columns2 }/>  */}\n\n\n\n       {/* {testcomponentas}\n            \n\n          </div>\n        </div>\n\n\n        <AddModal  show={this.state.addModalShow} onHide={addModalClose} />\n        <ContactModal show={this.state.contactModalShow} onHide={contactModalClose} />\n        <ProductModal show={this.state.productModalShow} onHide={productModalClose} />*/}\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\reportWebVitals.js",[],"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ContactModal.js",["147","148"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, FormControl } from 'react-bootstrap';\r\nimport firebase from './util/firebase';\r\n\r\nexport class ContactModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n          inputFirstName: '',\r\n          inputLastName: '',\r\n          inputEmail: '',\r\n          inputPhone: '',\r\n          inputJobPosition: '',\r\n          inputAddress: ''\r\n        }\r\n      }\r\n    \r\n      updateFirstNameValue(evt) {\r\n        this.setState({\r\n          inputFirstName: evt.target.value,\r\n        })\r\n      }\r\n    \r\n      updateLastNameValue(evt2) {\r\n        this.setState({\r\n          inputLastName: evt2.target.value,\r\n        })\r\n      }\r\n    \r\n      updateEmailValue(evt3) {\r\n        this.setState({\r\n          inputEmail: evt3.target.value,\r\n        })\r\n      }\r\n\r\n      updatePhoneValue(evt4) {\r\n        this.setState({\r\n          inputPhone: evt4.target.value,\r\n        })\r\n      }\r\n    \r\n      updateJobPositionValue(evt5) {\r\n        this.setState({\r\n          inputJobPosition: evt5.target.value,\r\n        })\r\n      }\r\n    \r\n      updateAddressValue(evt6) {\r\n        this.setState({\r\n          inputAddress: evt6.target.value,\r\n        })\r\n      }\r\n    \r\n      AddContactToDb() { \r\n        let vardas = this.state.inputFirstName;\r\n        let pavarde = this.state.inputLastName;\r\n        let pastas = this.state.inputEmail;\r\n        let telefonas = this.state.inputPhone;\r\n        let pareigos = this.state.inputJobPosition;\r\n        let adresas = this.state.inputAddress;\r\n        let recId = 'temp';\r\n        console.log(vardas +\" \"+ pavarde +\" \"+ pastas +\" \"+ telefonas +\" \"+ pareigos +\" \"+ adresas);\r\n        \r\n        /**/const todoRef = firebase.database().ref('ContactLists');\r\n         const kontaktasDB = {\r\n         vardas, pavarde, pastas, telefonas, pareigos, adresas,recId};\r\n    \r\n        let permId = todoRef.push(kontaktasDB).key;\r\n        todoRef.child(permId).update({recId: permId});\r\n        console.log(permId);\r\n        /**/\r\n    \r\n      }\r\n   \r\n    render() {\r\n        return (\r\n            <Modal\r\n\r\n\r\n                {...this.props}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormControl value={this.state.inputFirstName} onChange={evt => this.updateFirstNameValue(evt)}\r\n                        placeholder=\"First Name\" aria-label=\"First Name\"\r\n                    />\r\n                    <FormControl value={this.state.inputLastName} onChange={evt2 => this.updateLastNameValue(evt2)}\r\n                        placeholder=\"Last Name\" aria-label=\"Last Name\"\r\n                    />\r\n                    <FormControl value={this.state.inputEmail} onChange={evt3 => this.updateEmailValue(evt3)}\r\n                        placeholder=\"Email\" aria-label=\"Email\"\r\n                    />\r\n                    <FormControl value={this.state.inputPhone} onChange={evt4 => this.updatePhoneValue(evt4)}\r\n                        placeholder=\"Phone\" aria-label=\"Phone\"\r\n                    />\r\n                    <FormControl value={this.state.inputJobPosition} onChange={evt5 => this.updateJobPositionValue(evt5)}\r\n                        placeholder=\"Job Position\" aria-label=\"Job Position\"\r\n                    />\r\n                    <FormControl value={this.state.inputAddress} onChange={evt6 => this.updateAddressValue(evt6)}\r\n                     id=\"fname\" name=\"fname\"\r\n                        placeholder=\"Address\" aria-label=\"Address\"\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\r\n                    <Button variant=\"primary\" onClick={() => this.AddContactToDb()}>Save</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\EditContactForm.js",[],"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\ProductTable.js",["149","150","151","152"],"import React, { Component } from 'react'\r\n//import { Table, Button, Modal } from 'reactstrap';\r\nimport firebase from './util/firebase';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Modal, Button, Row, Col, Form, FormControl } from 'react-bootstrap';\r\n\r\nconst productColumns = [{\r\n  dataField: 'pavadinimas',\r\n  text: 'Name'\r\n}, {\r\n  dataField: 'kaina',\r\n  text: 'Price'\r\n}, {\r\n  dataField: 'kiekis',\r\n  text: 'Quantity'\r\n}, {\r\n  dataField: 'suma',\r\n  text: 'Sum'\r\n}, {\r\n  dataField: 'projektas',\r\n  text: 'Project'\r\n}, {\r\n  dataField: 'aprasymas',\r\n  text: 'Description'\r\n}, {\r\n  dataField: 'sukurimodata',\r\n  text: 'Created On'\r\n},];\r\n\r\nexport class ProductTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.projectRef = React.createRef();\r\n    this.state = {\r\n      productList: [],\r\n\r\n      depsPrj: [], projectModalShow: false,\r\n      show: false,\r\n      pavadinimas: '',\r\n      aprasymas: '',\r\n      kiekis: '',\r\n      kaina: '',\r\n      produktoId: '',\r\n      projektas: '',\r\n      deleteConfirm: false,\r\n    }\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = e => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: true });\r\n  };\r\n\r\n  hideConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: false });\r\n  };\r\n\r\n  updateNameValue(evt) {\r\n    this.setState({\r\n      pavadinimas: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateQuantityValue(evt2) {\r\n    this.setState({\r\n      kiekis: evt2.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(evt3) {\r\n    this.setState({\r\n      aprasymas: evt3.target.value,\r\n    })\r\n  }\r\n\r\n  updatePriceValue(evt4) {\r\n    this.setState({\r\n      kaina: evt4.target.value,\r\n    })\r\n  }\r\n\r\n  updateProjectValue(evt5) {\r\n    this.setState({\r\n      projektas: evt5.target.value,\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    var db = firebase.database().ref(\"ProductsLists\");\r\n    db.child(this.state.produktoId).update({\r\n      pavadinimas: this.state.pavadinimas, aprasymas: this.state.aprasymas, kiekis: this.state.kiekis,\r\n      projektas: this.projectRef.current.value, kaina: this.state.kaina,\r\n      suma: this.state.kaina * this.state.kiekis\r\n    }); //geras\r\n  }\r\n\r\n  onDelete() {\r\n    var db = firebase.database().ref(\"ProductsLists\");\r\n    db.child(this.state.produktoId).remove();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ productList: [] });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var counter = 0;\r\n    this.setState({ productList: [] });\r\n    firebase.database().ref(\"ProductsLists\").on('value', (snapshot) => {\r\n      let productList = [];\r\n      snapshot.forEach(snap => {\r\n        counter++;\r\n        console.log(snap.val());\r\n        console.log(snap.key);//recod id!!!\r\n        productList.push(snap.val());\r\n      });\r\n\r\n      this.setState({ productList: productList });\r\n    });\r\n    console.log(counter);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { depsPrj } = this.state;\r\n    //let projectModalClose = () => this.setState({ projectModalShow: false });\r\n\r\n    const rowEvents = {\r\n      onClick: (e, row) => {\r\n        console.log(row);\r\n        this.setState({\r\n          pavadinimas: row.pavadinimas,\r\n          aprasymas: row.aprasymas,\r\n          kiekis: row.kiekis,\r\n          kaina: row.kaina,\r\n          projektas: row.projektas,\r\n          produktoId: row.recId,\r\n        });\r\n\r\n        console.log(this.state.pavadinimas);\r\n        console.log(this.state.produktoId);\r\n        console.log(this.state.projektas);\r\n        this.showModal();\r\n        //e => {this.showModal();}\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Modal show={this.state.deleteConfirm} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Do you Really want to Delete this record?</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.setState({ deleteConfirm: false })}>Cancel</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onDelete()}>Confirm</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Modal show={this.state.show} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Product</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FormControl onChange={evt => this.updateNameValue(evt)} value={this.state.pavadinimas} />\r\n\r\n            <FormControl onChange={evt => this.updateQuantityValue(evt)} value={this.state.kiekis} />\r\n\r\n            <FormControl onChange={evt => this.updatePriceValue(evt)} value={this.state.kaina} />\r\n\r\n            <FormControl as=\"select\" custom ref={this.projectRef}>\r\n              <option value={this.state.projektas}>{this.state.projektas}</option>\r\n              <option value=\"Projektas 2\">Projektas 2</option>\r\n              <option value=\"Projektas 3\">Projektas 3</option>\r\n              <option value=\"Projektas 4\">Projektas 4</option>\r\n            </FormControl>\r\n\r\n            <FormControl onChange={evt => this.updateDescriptionValue(evt)} value={this.state.aprasymas} as=\"textarea\" />\r\n\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\r\n            <Button variant=\"primary\" onClick={() => this.onUpdate()}>Update</Button>\r\n            <Button variant=\"danger\" onClick={() => this.showConfirmDelete()}>Delete</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <BootstrapTable keyField='id' data={this.state.productList} columns={productColumns} rowEvents={rowEvents} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProductTable","C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\components\\navbar.component.js",[],"C:\\Users\\Deividas\\reactapps\\ispk\\ispk\\src\\util\\firebase.js",[],{"ruleId":"153","severity":1,"message":"154","line":2,"column":25,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":2,"column":30,"nodeType":"155","messageId":"156","endLine":2,"endColumn":33},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":25,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":2,"column":30,"nodeType":"155","messageId":"156","endLine":2,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":3,"column":25,"nodeType":"155","messageId":"156","endLine":3,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":3,"column":30,"nodeType":"155","messageId":"156","endLine":3,"endColumn":33},{"ruleId":"153","severity":1,"message":"162","line":3,"column":35,"nodeType":"155","messageId":"156","endLine":3,"endColumn":39},{"ruleId":"153","severity":1,"message":"163","line":6,"column":75,"nodeType":"155","messageId":"156","endLine":6,"endColumn":87},{"ruleId":"153","severity":1,"message":"164","line":6,"column":99,"nodeType":"155","messageId":"156","endLine":6,"endColumn":110},{"ruleId":"153","severity":1,"message":"165","line":6,"column":120,"nodeType":"155","messageId":"156","endLine":6,"endColumn":129},{"ruleId":"153","severity":1,"message":"154","line":5,"column":25,"nodeType":"155","messageId":"156","endLine":5,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":5,"column":30,"nodeType":"155","messageId":"156","endLine":5,"endColumn":33},{"ruleId":"153","severity":1,"message":"162","line":5,"column":35,"nodeType":"155","messageId":"156","endLine":5,"endColumn":39},{"ruleId":"153","severity":1,"message":"166","line":5,"column":54,"nodeType":"155","messageId":"156","endLine":5,"endColumn":65},{"ruleId":"153","severity":1,"message":"167","line":134,"column":13,"nodeType":"155","messageId":"156","endLine":134,"endColumn":20},{"ruleId":"153","severity":1,"message":"168","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":5,"column":25,"nodeType":"155","messageId":"156","endLine":5,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":5,"column":30,"nodeType":"155","messageId":"156","endLine":5,"endColumn":33},{"ruleId":"153","severity":1,"message":"162","line":5,"column":35,"nodeType":"155","messageId":"156","endLine":5,"endColumn":39},{"ruleId":"153","severity":1,"message":"169","line":146,"column":9,"nodeType":"155","messageId":"156","endLine":146,"endColumn":18},{"ruleId":"153","severity":1,"message":"170","line":188,"column":11,"nodeType":"155","messageId":"156","endLine":188,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":191,"column":27,"nodeType":"173","messageId":"174","endLine":191,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":192,"column":32,"nodeType":"173","messageId":"174","endLine":192,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":193,"column":32,"nodeType":"173","messageId":"174","endLine":193,"endColumn":34},{"ruleId":"153","severity":1,"message":"167","line":196,"column":13,"nodeType":"155","messageId":"156","endLine":196,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":210,"column":11,"nodeType":"177","messageId":"174","endLine":210,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":248,"column":41,"nodeType":"173","messageId":"174","endLine":248,"endColumn":43},{"ruleId":"171","severity":1,"message":"172","line":251,"column":41,"nodeType":"173","messageId":"174","endLine":251,"endColumn":43},{"ruleId":"171","severity":1,"message":"172","line":253,"column":90,"nodeType":"173","messageId":"174","endLine":253,"endColumn":92},{"ruleId":"171","severity":1,"message":"172","line":261,"column":41,"nodeType":"173","messageId":"174","endLine":261,"endColumn":43},{"ruleId":"171","severity":1,"message":"172","line":263,"column":94,"nodeType":"173","messageId":"174","endLine":263,"endColumn":96},{"ruleId":"153","severity":1,"message":"168","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":13},{"ruleId":"153","severity":1,"message":"178","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"179","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"153","severity":1,"message":"168","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":13},{"ruleId":"153","severity":1,"message":"180","line":2,"column":17,"nodeType":"155","messageId":"156","endLine":2,"endColumn":26},{"ruleId":"153","severity":1,"message":"181","line":2,"column":28,"nodeType":"155","messageId":"156","endLine":2,"endColumn":36},{"ruleId":"153","severity":1,"message":"182","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":16},{"ruleId":"153","severity":1,"message":"183","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"184","line":6,"column":17,"nodeType":"155","messageId":"156","endLine":6,"endColumn":23},{"ruleId":"153","severity":1,"message":"185","line":6,"column":25,"nodeType":"155","messageId":"156","endLine":6,"endColumn":30},{"ruleId":"153","severity":1,"message":"186","line":9,"column":10,"nodeType":"155","messageId":"156","endLine":9,"endColumn":18},{"ruleId":"153","severity":1,"message":"187","line":10,"column":10,"nodeType":"155","messageId":"156","endLine":10,"endColumn":16},{"ruleId":"153","severity":1,"message":"188","line":10,"column":18,"nodeType":"155","messageId":"156","endLine":10,"endColumn":21},{"ruleId":"153","severity":1,"message":"189","line":10,"column":23,"nodeType":"155","messageId":"156","endLine":10,"endColumn":34},{"ruleId":"153","severity":1,"message":"190","line":10,"column":36,"nodeType":"155","messageId":"156","endLine":10,"endColumn":46},{"ruleId":"153","severity":1,"message":"191","line":10,"column":48,"nodeType":"155","messageId":"156","endLine":10,"endColumn":59},{"ruleId":"153","severity":1,"message":"192","line":15,"column":10,"nodeType":"155","messageId":"156","endLine":15,"endColumn":22},{"ruleId":"153","severity":1,"message":"193","line":16,"column":10,"nodeType":"155","messageId":"156","endLine":16,"endColumn":22},{"ruleId":"153","severity":1,"message":"194","line":17,"column":8,"nodeType":"155","messageId":"156","endLine":17,"endColumn":23},{"ruleId":"153","severity":1,"message":"195","line":18,"column":8,"nodeType":"155","messageId":"156","endLine":18,"endColumn":16},{"ruleId":"153","severity":1,"message":"196","line":19,"column":8,"nodeType":"155","messageId":"156","endLine":19,"endColumn":22},{"ruleId":"153","severity":1,"message":"197","line":20,"column":8,"nodeType":"155","messageId":"156","endLine":20,"endColumn":25},{"ruleId":"153","severity":1,"message":"198","line":22,"column":8,"nodeType":"155","messageId":"156","endLine":22,"endColumn":18},{"ruleId":"153","severity":1,"message":"199","line":87,"column":13,"nodeType":"155","messageId":"156","endLine":87,"endColumn":17},{"ruleId":"153","severity":1,"message":"200","line":88,"column":13,"nodeType":"155","messageId":"156","endLine":88,"endColumn":18},{"ruleId":"153","severity":1,"message":"201","line":89,"column":13,"nodeType":"155","messageId":"156","endLine":89,"endColumn":18},{"ruleId":"153","severity":1,"message":"202","line":90,"column":9,"nodeType":"155","messageId":"156","endLine":90,"endColumn":22},{"ruleId":"153","severity":1,"message":"203","line":91,"column":9,"nodeType":"155","messageId":"156","endLine":91,"endColumn":26},{"ruleId":"153","severity":1,"message":"204","line":92,"column":9,"nodeType":"155","messageId":"156","endLine":92,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":123,"column":26,"nodeType":"173","messageId":"174","endLine":123,"endColumn":28},{"ruleId":"171","severity":1,"message":"172","line":125,"column":33,"nodeType":"173","messageId":"174","endLine":125,"endColumn":35},{"ruleId":"153","severity":1,"message":"205","line":128,"column":7,"nodeType":"155","messageId":"156","endLine":128,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":2,"column":25,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":2,"column":30,"nodeType":"155","messageId":"156","endLine":2,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":5,"column":25,"nodeType":"155","messageId":"156","endLine":5,"endColumn":28},{"ruleId":"153","severity":1,"message":"157","line":5,"column":30,"nodeType":"155","messageId":"156","endLine":5,"endColumn":33},{"ruleId":"153","severity":1,"message":"162","line":5,"column":35,"nodeType":"155","messageId":"156","endLine":5,"endColumn":39},{"ruleId":"153","severity":1,"message":"167","line":134,"column":13,"nodeType":"155","messageId":"156","endLine":134,"endColumn":20},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'Form' is defined but never used.","'setKontaktas' is assigned a value but never used.","'setNuolaida' is assigned a value but never used.","'setBusena' is assigned a value but never used.","'ProgressBar' is defined but never used.","'depsPrj' is assigned a value but never used.","'axios' is defined but never used.","'optionSet' is assigned a value but never used.","'sortas' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'busena'.","ObjectExpression","'DatePicker' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'render' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'AddModal' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ContactModal' is defined but never used.","'ProductModal' is defined but never used.","'EditContactForm' is defined but never used.","'firebase' is defined but never used.","'BootstrapTable' is defined but never used.","'paginationFactory' is defined but never used.","'AddProject' is defined but never used.","'deps' is assigned a value but never used.","'deps2' is assigned a value but never used.","'deps3' is assigned a value but never used.","'addModalClose' is assigned a value but never used.","'contactModalClose' is assigned a value but never used.","'productModalClose' is assigned a value but never used.","'testcomponentas' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]