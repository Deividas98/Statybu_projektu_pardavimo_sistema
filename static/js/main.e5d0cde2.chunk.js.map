{"version":3,"sources":["util/firebase.js","AddModal.js","ContactTable.js","ProjectTable.js","ProductTable.js","ContactModal.js","ProductModal.js","EditContactForm.js","components/navbar.component.js","components/products-list.component.js","components/edit-products.component.js","components/create-product.component.js","components/create-project.component.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Component","contactColumns","dataField","text","ContactTable","props","showModal","e","setState","show","hideModal","showConfirmDelete","deleteConfirm","hideConfirmDelete","state","contactList","depsPrj","contactModalShow","vardas","pavarde","telefonas","pastas","adresas","pareigos","kontaktoId","evt","this","target","value","evt2","evt3","evt4","evt5","evt6","database","ref","child","update","remove","counter","on","snapshot","forEach","snap","console","log","val","key","push","rowEvents","onClick","row","recId","Modal","Header","closeButton","Title","Body","Footer","Button","variant","onDelete","FormControl","onChange","updateFirstNameValue","updateLastNameValue","updateEmailValue","updatePhoneValue","updateJobPositionValue","updateAddressValue","onUpdate","keyField","data","columns","projectColumns","ProjectTable","myRef","React","createRef","BusenaRef","optionSet","projectList","projectModalShow","pavadinimas","aprasymas","busena","kontaktas","nuolaida","projektoId","current","newBugs","data3","orderByChild","reverse","progress","sortAZ","ProgressBar","now","label","updateInputValue","disabled","updateDescriptionValue","as","custom","updateNuolaidaValue","productColumns","ProductTable","projectRef","productList","kiekis","kaina","produktoId","projektas","suma","updateNameValue","updateQuantityValue","updatePriceValue","Navbar2","className","to","ProductsList","EditProduct","CreateProducts","CreateProject","App","deps","addModalShow","deps2","deps3","productModalShow","table","prevState","path","exact","component","CreateProduct","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5d0cde2.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n/*const firebaseConfig = {\r\n    apiKey: \"AIzaSyAKQAA0EKa0EX55CVSCtp0CG3dL79qXuT4\",\r\n    authDomain: \"kompleksinis1.firebaseapp.com\",\r\n//added\r\n    databaseURL: \"https://kompleksinis1-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"kompleksinis1\",\r\n    storageBucket: \"kompleksinis1.appspot.com\",\r\n    messagingSenderId: \"753077363266\",\r\n    appId: \"1:753077363266:web:0eb56759009af7293d83db\",\r\n    measurementId: \"G-C4KRYMMG12\"\r\n  };\r\n  firebase/*.default*///.initializeApp(firebaseConfig);*/\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyC_Yxgc5mVES-y9xWz4ODhmnqT5DLEf7PM\",\r\n    authDomain: \"kompleksinis3.firebaseapp.com\",\r\n    projectId: \"kompleksinis3\",\r\n    storageBucket: \"kompleksinis3.appspot.com\",\r\n    messagingSenderId: \"220379036927\",\r\n    appId: \"1:220379036927:web:ea75b3d780d13d4c2720ca\",\r\n    measurementId: \"G-RXBD2D785E\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, FormControl} from 'react-bootstrap';\r\nimport firebase from './util/firebase';\r\n\r\nexport class AddModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.BusenaRef = React.createRef();\r\n    this.state = {\r\n      inputProject: '',\r\n      inputDescription: '',\r\n      inputNuolaida: ''\r\n    }\r\n  }\r\n\r\n  updateInputValue(evt) {\r\n    this.setState({\r\n      inputProject: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(e) {\r\n    this.setState({\r\n      inputDescription: e.target.value,\r\n    })\r\n  }\r\n\r\n  updateNuolaidaValue(ev) {\r\n    this.setState({\r\n      inputNuolaida: ev.target.value,\r\n    })\r\n  }\r\n\r\n  AddProjectToDb() {\r\n//datos\r\nvar today = new Date();\r\nvar dd = String(today.getDate()).padStart(2, '0');\r\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nvar yyyy = today.getFullYear();\r\n\r\ntoday = yyyy + '-' + mm + '-' + dd;\r\n\r\n    let pavadinimas = this.state.inputProject;\r\n    let aprasymas = this.state.inputDescription;\r\n    let nuolaida = this.state.inputNuolaida;\r\n    let kontaktas = this.myRef.current.value;\r\n    let busena = this.BusenaRef.current.value;\r\n    let recId = 'temp';\r\n    let sukurimodata = today;\r\n    let projektoSuma = 0;\r\n    console.log(pavadinimas +\" \"+ aprasymas +\" \"+ nuolaida +\" \"+ kontaktas +\" \"+ busena +\" \"+ today +\" \"+ projektoSuma);\r\n    \r\n    \r\n    /**/const todoRef = firebase.database().ref('TESTINIS-ProjectsList');\r\n     const projektasDB = {\r\n     pavadinimas,\r\n    aprasymas,\r\n    kontaktas,\r\n    nuolaida,\r\n    busena,\r\n    recId,\r\n    sukurimodata,\r\n    projektoSuma\r\n     };\r\n\r\n    let permId = todoRef.push(projektasDB).key;\r\n    todoRef.child(permId).update({recId: permId});\r\n    console.log(permId);\r\n    /**/\r\n\r\n  }\r\n\r\n  /*\r\n  po pirmos modal eilutes \r\n  show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          \r\n          secondary variant button onClick={handleClose}*/\r\n  render() {\r\n    return (\r\n      <Modal\r\n\r\n\r\n        {...this.props}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Project</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormControl value={this.state.inputProject} onChange={evt => this.updateInputValue(evt)}\r\n            placeholder=\"Pavadinimas\"\r\n            aria-label=\"Pavadinimas\"\r\n          />\r\n          <FormControl value={this.state.inputDescription} onChange={e => this.updateDescriptionValue(e)}\r\n            placeholder={\"Aprašymas\"}\r\n            aria-label=\"Aprasymas\" as=\"textarea\"\r\n          />\r\n          <FormControl as=\"select\" custom ref={this.myRef}>\r\n            <option value=\"Jonas Jonaitis\">Jonas Jonaitis</option>\r\n            <option value=\"amber\">Petras Petraitis</option>\r\n            <option value=\"purple\">Kontaktas2</option>\r\n            <option value=\"magenta\">Kontaktas2</option>\r\n          </FormControl>\r\n\r\n          <FormControl value={this.state.inputNuolaida} onChange={ev => this.updateNuolaidaValue(ev)}\r\n            placeholder=\"Nuolaida\"\r\n            aria-label=\"Nuolaida\"\r\n          />\r\n\r\n          <FormControl as=\"select\" custom ref={this.BusenaRef}>\r\n            <option value=\"Pradėtas\">Pradėtas</option>\r\n            <option value=\"amber\">Vykdomas</option>\r\n            <option value=\"purple\">Pabaigtas</option>\r\n            <option value=\"magenta\">Atšauktas</option>\r\n          </FormControl>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onHide}>\r\n            Atsaukti\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => this.AddProjectToDb()}>Saugoti</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react'\r\n//import { Table, Button, Modal, Alert } from 'reactstrap';\r\nimport firebase from './util/firebase';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Modal, Button, Row, Col, Form, FormControl, ProgressBar } from 'react-bootstrap';\r\n\r\nconst contactColumns = [{\r\n  dataField: 'vardas',\r\n  text: 'First Name'\r\n}, {\r\n  dataField: 'pavarde',\r\n  text: 'Last Name'\r\n}, {\r\n  dataField: 'pastas',\r\n  text: 'Email'\r\n}, {\r\n  dataField: 'telefonas',\r\n  text: 'Phone'\r\n}, {\r\n  dataField: 'pareigos',\r\n  text: 'Job Position'\r\n}, {\r\n  dataField: 'adresas',\r\n  text: 'Address'\r\n},];\r\n\r\nexport class ContactTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      contactList: [],\r\n\r\n      depsPrj: [], contactModalShow: false,\r\n      show: false,\r\n      vardas: '',\r\n      pavarde: '',\r\n      telefonas: '',\r\n      pastas: '',\r\n      adresas: '',\r\n      pareigos: '',\r\n      kontaktoId: '',\r\n      deleteConfirm: false,\r\n    }\r\n\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = e => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: true });\r\n  };\r\n\r\n  hideConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: false });\r\n  };\r\n\r\n  updateFirstNameValue(evt) {\r\n    this.setState({\r\n      vardas: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateLastNameValue(evt2) {\r\n    this.setState({\r\n      pavarde: evt2.target.value,\r\n    })\r\n  }\r\n\r\n  updatePhoneValue(evt3) {\r\n    this.setState({\r\n      telefonas: evt3.target.value,\r\n    })\r\n  }\r\n\r\n  updateEmailValue(evt4) {\r\n    this.setState({\r\n      pastas: evt4.target.value,\r\n    })\r\n  }\r\n\r\n  updateJobPositionValue(evt5) {\r\n    this.setState({\r\n      pareigos: evt5.target.value,\r\n    })\r\n  }\r\n\r\n  updateAddressValue(evt6) {\r\n    this.setState({\r\n      adresas: evt6.target.value,\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    var db = firebase.database().ref(\"ContactLists\");\r\n    db.child(this.state.kontaktoId).update({\r\n      vardas: this.state.vardas, pavarde: this.state.pavarde, pastas: this.state.pastas,\r\n      telefonas: this.state.telefonas, pareigos: this.state.pareigos, adresas: this.state.adresas,\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    var db = firebase.database().ref(\"ContactLists\");\r\n    db.child(this.state.kontaktoId).remove();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ contactList: [] });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var counter = 0;\r\n    this.setState({ contactList: [] });\r\n    firebase.database().ref(\"ContactLists\").on('value', (snapshot) => {\r\n      let contactList = [];\r\n      snapshot.forEach(snap => {\r\n        counter++;\r\n        console.log(snap.val());\r\n        console.log(snap.key);//recod id!!!\r\n        contactList.push(snap.val());\r\n      });\r\n      this.setState({ contactList: contactList });\r\n    });\r\n    console.log(counter);\r\n  }\r\n\r\n  render() {\r\n    const { depsPrj } = this.state;\r\n\r\n    const rowEvents = {\r\n      onClick: (e, row) => {\r\n        console.log(row);\r\n        this.setState({\r\n          vardas: row.vardas,\r\n          pavarde: row.pavarde,\r\n          telefonas: row.telefonas,\r\n          pastas: row.pastas,\r\n          pareigos: row.pareigos,\r\n          adresas: row.adresas,\r\n          kontaktoId: row.recId,\r\n        });\r\n\r\n        console.log(this.state.vardas);\r\n        console.log(this.state.kontaktoId);\r\n        this.showModal();\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Modal show={this.state.deleteConfirm} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Do you Really want to Delete this record?</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.setState({ deleteConfirm: false })}>Cancel</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onDelete()}>Confirm</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={this.state.show} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Contact</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FormControl onChange={evt => this.updateFirstNameValue(evt)} value={this.state.vardas} />\r\n            <FormControl onChange={evt => this.updateLastNameValue(evt)} value={this.state.pavarde} />\r\n            <FormControl onChange={evt => this.updateEmailValue(evt)} value={this.state.pastas} />\r\n            <FormControl onChange={evt => this.updatePhoneValue(evt)} value={this.state.telefonas} />\r\n            <FormControl onChange={evt => this.updateJobPositionValue(evt)} value={this.state.pareigos} />\r\n            <FormControl onChange={evt => this.updateAddressValue(evt)} value={this.state.adresas} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\r\n            <Button variant=\"primary\" onClick={() => this.onUpdate()}>Update</Button>\r\n            <Button variant=\"danger\" onClick={() => this.showConfirmDelete()}>Delete</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <BootstrapTable keyField='id' data={this.state.contactList} columns={contactColumns} rowEvents={rowEvents} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactTable","import React, { Component } from 'react'\r\n//import { Table, Button, Modal } from 'reactstrap';\r\nimport firebase from './util/firebase';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Modal, Button, Row, Col, Form, FormControl, ProgressBar } from 'react-bootstrap';\r\n\r\n//const projectList = [\r\n  /*{\r\n     \"id\": \"10\",\r\n     \"name\": \"minivan\",\r\n     \"price\": 333\r\n     \r\n   }*/\r\n//];\r\n\r\n\r\nconst projectColumns = [/*{\r\n  dataField: 'id',\r\n  text: 'Product ID'\r\n},*/ {\r\n  dataField: 'pavadinimas',\r\n  text: 'Pavadinimas'\r\n}, {\r\n  dataField: 'aprasymas',\r\n  text: 'Aprašymas'\r\n}, {\r\n  dataField: 'projektoSuma',\r\n  text: 'Suma'\r\n}, {\r\n  dataField: 'kontaktas',\r\n  text: 'Kontaktas'\r\n}, {\r\n  dataField: 'nuolaida',\r\n  text: 'Nuolaida'\r\n}, {\r\n  dataField: 'sukurimodata',\r\n  text: 'Sukūrimo Data'\r\n}, {\r\n  dataField: 'busena',\r\n  text: 'Būsena'\r\n},];\r\n\r\n/*const toggleTrueFalse = () => {\r\n  setShowModal(this.handleShow());\r\n};*/\r\n\r\nexport class ProjectTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.myRef = React.createRef();\r\n    this.BusenaRef = React.createRef();\r\n\r\n    this.state = {\r\n     // message: 'hello',\r\n      //ProjectList: [],\r\n      optionSet: [],\r\n      projectList: [],\r\n\r\n      depsPrj: [], projectModalShow: false,\r\n      show: false,\r\n      pavadinimas: '',\r\n      aprasymas: '',\r\n      busena: '',\r\n      kontaktas: '',\r\n      nuolaida: '',\r\n      projektoId: '',\r\n      deleteConfirm: false,\r\n    }\r\n\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = e => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: true });\r\n  };\r\n\r\n  hideConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: false });\r\n  };\r\n\r\n  updateInputValue(evt) {\r\n    this.setState({\r\n      pavadinimas: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateNuolaidaValue(evt2) {\r\n    this.setState({\r\n      nuolaida: evt2.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(evt3) {\r\n    this.setState({\r\n      aprasymas: evt3.target.value,\r\n    })\r\n  }\r\n\r\n  updateStatusValue(evt4) {\r\n    this.setState({\r\n      busena: evt4.target.value,\r\n    })\r\n  }\r\n\r\n  updateContactValue(evt5) {\r\n    this.setState({\r\n      kontaktas: evt5.target.value,\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    var db = firebase.database().ref(\"TESTINIS-ProjectsList\");\r\n    db.child(this.state.projektoId).update({\r\n      pavadinimas: this.state.pavadinimas, aprasymas: this.state.aprasymas,\r\n      kontaktas: this.myRef.current.value, nuolaida: this.state.nuolaida, busena: this.BusenaRef.current.value\r\n    }); //geras\r\n  }\r\n\r\n  onDelete() {\r\n    var db = firebase.database().ref(\"TESTINIS-ProjectsList\");\r\n    db.child(this.state.projektoId).remove();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ projectList: [] });\r\n  }\r\n\r\n  /*getSnapshotBeforeUpdate(prevProps) {\r\n    return { sortYN: prevProps.data3 !== this.props.data3 };\r\n  }*/\r\n\r\n  componentDidMount() {\r\n    const newBugs = this.props.data3;\r\n    console.log(\"another comp \" + /*this.props.data3*/newBugs);\r\n\r\n    //console.log(\"prewprops::: \" + prevProps);\r\n    var counter = 0;\r\n    let optionSet = [];\r\n    this.setState({ projectList: [] });\r\n    firebase.database().ref(\"TESTINIS-ProjectsList\").orderByChild(\"pavadinimas\").on('value', (snapshot) => {\r\n      //let ProjectList = [];\r\n      let projectList = [];\r\n      \r\n      snapshot.forEach(snap => {\r\n        // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n        //ProjectList.push(snap.val());\r\n        counter++;\r\n        console.log(snap.val());\r\n        console.log(snap.key);//recod id!!!\r\n        projectList.push(snap.val());\r\n        //var object[counter] ={};\r\n        //optionSet.push(snap.val().kontaktas);\r\n\r\n      });\r\n      \r\n      if(!newBugs){projectList.reverse();}\r\n      \r\n      //this.setState({ ProjectList: ProjectList });\r\n      this.setState({ projectList: projectList });\r\n      //window.location.reload(false);\r\n    });\r\n    console.log(counter);\r\n    //console.log(optionSet);\r\n\r\n\r\n    //get products\r\n    /*firebase.database().ref(\"ContactLists\").on('value', (snapshot) => {\r\n      snapshot.forEach(snap => {\r\n        optionSet.push(snap.val().vardas);\r\n        optionSet.push(snap.val().pavarde);\r\n      });\r\n    });\r\n    console.log(optionSet);*/\r\n  }\r\n\r\n  render() {\r\n    //const newBugs = this.props.data3;\r\n    \r\n    //console.log(\"another comp \" + /*this.props.data3*/newBugs);\r\n    const sortas = this.props.sortAZ;\r\n    let progress = 0;\r\n\r\n    if (this.state.busena == \"Pradėtas\") { progress = 33; } \r\n    else if (this.state.busena == \"Vykdomas\") { progress = 67; } \r\n    else if (this.state.busena == \"Pabaigtas\") { progress = 100; }\r\n    else progress = 0;\r\n\r\n    const { depsPrj } = this.state;\r\n    //let projectModalClose = () => this.setState({ projectModalShow: false });\r\n\r\n    const rowEvents = {\r\n      onClick: (e, row) => {\r\n        console.log(row);\r\n        this.setState({\r\n          pavadinimas: row.pavadinimas,\r\n          aprasymas: row.aprasymas,\r\n          busena: row.busena,\r\n          nuolaida: row.nuolaida,\r\n          kontaktas: row.kontaktas,\r\n          projektoId: row.recId,\r\n          // kontaktas: row.this.myRef.current.value,\r\n          busena: row.busena//this.BusenaRef.current.value\r\n        });\r\n\r\n        console.log(this.state.pavadinimas);\r\n        console.log(this.state.projektoId);\r\n        console.log(this.state.kontaktas + \" | \" + this.state.busena);\r\n        this.showModal();\r\n        //e => {this.showModal();}\r\n      },\r\n    };\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <Modal show={this.state.deleteConfirm} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Do you Really want to Delete this record?</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.setState({ deleteConfirm: false })}>Cancel</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onDelete()}>Confirm</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Modal show={this.state.show} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Project</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <ProgressBar now={progress} label={this.state.busena} />\r\n\r\n            <FormControl onChange={evt => this.updateInputValue(evt)} value={this.state.pavadinimas}\r\n            disabled={this.state.busena == \"Pabaigtas\" ? true : false} />\r\n\r\n            <FormControl onChange={evt => this.updateDescriptionValue(evt)} value={this.state.aprasymas}  as=\"textarea\"\r\n            disabled={this.state.busena == \"Pabaigtas\" ? true : false}/>\r\n\r\n            <FormControl as=\"select\" custom ref={this.myRef} disabled={this.state.busena == \"Pabaigtas\" ? true : false}>\r\n              <option value={this.state.kontaktas}>{this.state.kontaktas}</option>\r\n              <option value=\"petras petraitis\">Petras Petraitis</option>\r\n              <option value=\"purple p\">Paba</option>\r\n              <option value=\"magenta mag\">Atš</option>\r\n            </FormControl>\r\n\r\n            <FormControl onChange={evt => this.updateNuolaidaValue(evt)} value={this.state.nuolaida} \r\n            disabled={this.state.busena == \"Pabaigtas\" ? true : false}/>\r\n\r\n            <FormControl as=\"select\" custom ref={this.BusenaRef} disabled={this.state.busena == \"Pabaigtas\" ? true : false}>\r\n              <option value={this.state.busena}>{this.state.busena}</option>\r\n              <option value=\"Pradėtas\">Pradėtas</option>\r\n              <option value=\"Vykdomas\">Vykdomas</option>\r\n              <option value=\"Pabaigtas\">Pabaigtas</option>\r\n              <option value=\"Atšauktas\">Atšauktas</option>\r\n            </FormControl>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\r\n            <Button variant=\"primary\" onClick={() => this.onUpdate()}>Update</Button>\r\n            <Button variant=\"danger\" onClick={() => this.showConfirmDelete()}>Delete</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <BootstrapTable keyField='id' data={this.state.projectList/*projectList*/} columns={projectColumns} rowEvents={rowEvents} />\r\n        \r\n\r\n        {/*}  <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Pavadinimas</th>\r\n              <th>Aprašymas</th>\r\n              <th>Suma</th>\r\n              <th>Kontaktas</th>\r\n              <th>Nuolaida</th>\r\n              <th>Sukūrimo data</th>\r\n              <th>Būsena</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.ProjectList.map(data => {\r\n              return (\r\n                <tr onRowClick={console.log(\"smt\")}>\r\n                  <td>1</td>\r\n                  <td>{data.pavadinimas}</td>\r\n                  <td>{data.aprasymas}</td>\r\n                  <td>x</td>\r\n                  <td>{data.kontaktas}</td>\r\n                  <td>{data.nuolaida}</td>\r\n                  <td>x</td>\r\n                  <td>{data.busena}</td>\r\n                </tr>\r\n              )\r\n            }\r\n            )}\r\n          </tbody>\r\n        </Table>*/}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectTable","import React, { Component } from 'react'\r\n//import { Table, Button, Modal } from 'reactstrap';\r\nimport firebase from './util/firebase';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Modal, Button, Row, Col, Form, FormControl } from 'react-bootstrap';\r\n\r\nconst productColumns = [{\r\n  dataField: 'pavadinimas',\r\n  text: 'Name'\r\n}, {\r\n  dataField: 'kaina',\r\n  text: 'Price'\r\n}, {\r\n  dataField: 'kiekis',\r\n  text: 'Quantity'\r\n}, {\r\n  dataField: 'suma',\r\n  text: 'Sum'\r\n}, {\r\n  dataField: 'projektas',\r\n  text: 'Project'\r\n}, {\r\n  dataField: 'aprasymas',\r\n  text: 'Description'\r\n}, {\r\n  dataField: 'sukurimodata',\r\n  text: 'Created On'\r\n},];\r\n\r\nexport class ProductTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.projectRef = React.createRef();\r\n    this.state = {\r\n      productList: [],\r\n\r\n      depsPrj: [], projectModalShow: false,\r\n      show: false,\r\n      pavadinimas: '',\r\n      aprasymas: '',\r\n      kiekis: '',\r\n      kaina: '',\r\n      produktoId: '',\r\n      projektas: '',\r\n      deleteConfirm: false,\r\n    }\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = e => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: true });\r\n  };\r\n\r\n  hideConfirmDelete = e => {\r\n    this.setState({ deleteConfirm: false });\r\n  };\r\n\r\n  updateNameValue(evt) {\r\n    this.setState({\r\n      pavadinimas: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateQuantityValue(evt2) {\r\n    this.setState({\r\n      kiekis: evt2.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(evt3) {\r\n    this.setState({\r\n      aprasymas: evt3.target.value,\r\n    })\r\n  }\r\n\r\n  updatePriceValue(evt4) {\r\n    this.setState({\r\n      kaina: evt4.target.value,\r\n    })\r\n  }\r\n\r\n  updateProjectValue(evt5) {\r\n    this.setState({\r\n      projektas: evt5.target.value,\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    var db = firebase.database().ref(\"ProductsLists\");\r\n    db.child(this.state.produktoId).update({\r\n      pavadinimas: this.state.pavadinimas, aprasymas: this.state.aprasymas, kiekis: this.state.kiekis,\r\n      projektas: this.projectRef.current.value, kaina: this.state.kaina,\r\n      suma: this.state.kaina * this.state.kiekis\r\n    }); //geras\r\n  }\r\n\r\n  onDelete() {\r\n    var db = firebase.database().ref(\"ProductsLists\");\r\n    db.child(this.state.produktoId).remove();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ productList: [] });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var counter = 0;\r\n    this.setState({ productList: [] });\r\n    firebase.database().ref(\"ProductsLists\").on('value', (snapshot) => {\r\n      let productList = [];\r\n      snapshot.forEach(snap => {\r\n        counter++;\r\n        console.log(snap.val());\r\n        console.log(snap.key);//recod id!!!\r\n        productList.push(snap.val());\r\n      });\r\n\r\n      this.setState({ productList: productList });\r\n    });\r\n    console.log(counter);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { depsPrj } = this.state;\r\n    //let projectModalClose = () => this.setState({ projectModalShow: false });\r\n\r\n    const rowEvents = {\r\n      onClick: (e, row) => {\r\n        console.log(row);\r\n        this.setState({\r\n          pavadinimas: row.pavadinimas,\r\n          aprasymas: row.aprasymas,\r\n          kiekis: row.kiekis,\r\n          kaina: row.kaina,\r\n          projektas: row.projektas,\r\n          produktoId: row.recId,\r\n        });\r\n\r\n        console.log(this.state.pavadinimas);\r\n        console.log(this.state.produktoId);\r\n        console.log(this.state.projektas);\r\n        this.showModal();\r\n        //e => {this.showModal();}\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Modal show={this.state.deleteConfirm} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Do you Really want to Delete this record?</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.setState({ deleteConfirm: false })}>Cancel</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onDelete()}>Confirm</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Modal show={this.state.show} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Product</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FormControl onChange={evt => this.updateNameValue(evt)} value={this.state.pavadinimas} />\r\n\r\n            <FormControl onChange={evt => this.updateQuantityValue(evt)} value={this.state.kiekis} />\r\n\r\n            <FormControl onChange={evt => this.updatePriceValue(evt)} value={this.state.kaina} />\r\n\r\n            <FormControl as=\"select\" custom ref={this.projectRef}>\r\n              <option value={this.state.projektas}>{this.state.projektas}</option>\r\n              <option value=\"Projektas 2\">Projektas 2</option>\r\n              <option value=\"Projektas 3\">Projektas 3</option>\r\n              <option value=\"Projektas 4\">Projektas 4</option>\r\n            </FormControl>\r\n\r\n            <FormControl onChange={evt => this.updateDescriptionValue(evt)} value={this.state.aprasymas} as=\"textarea\" />\r\n\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ show: false })}>Cancel</Button>\r\n            <Button variant=\"primary\" onClick={() => this.onUpdate()}>Update</Button>\r\n            <Button variant=\"danger\" onClick={() => this.showConfirmDelete()}>Delete</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <BootstrapTable keyField='id' data={this.state.productList} columns={productColumns} rowEvents={rowEvents} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProductTable","import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, FormControl } from 'react-bootstrap';\r\nimport firebase from './util/firebase';\r\n\r\nexport class ContactModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n          inputFirstName: '',\r\n          inputLastName: '',\r\n          inputEmail: '',\r\n          inputPhone: '',\r\n          inputJobPosition: '',\r\n          inputAddress: ''\r\n        }\r\n      }\r\n    \r\n      updateFirstNameValue(evt) {\r\n        this.setState({\r\n          inputFirstName: evt.target.value,\r\n        })\r\n      }\r\n    \r\n      updateLastNameValue(evt2) {\r\n        this.setState({\r\n          inputLastName: evt2.target.value,\r\n        })\r\n      }\r\n    \r\n      updateEmailValue(evt3) {\r\n        this.setState({\r\n          inputEmail: evt3.target.value,\r\n        })\r\n      }\r\n\r\n      updatePhoneValue(evt4) {\r\n        this.setState({\r\n          inputPhone: evt4.target.value,\r\n        })\r\n      }\r\n    \r\n      updateJobPositionValue(evt5) {\r\n        this.setState({\r\n          inputJobPosition: evt5.target.value,\r\n        })\r\n      }\r\n    \r\n      updateAddressValue(evt6) {\r\n        this.setState({\r\n          inputAddress: evt6.target.value,\r\n        })\r\n      }\r\n    \r\n      AddContactToDb() { \r\n        let vardas = this.state.inputFirstName;\r\n        let pavarde = this.state.inputLastName;\r\n        let pastas = this.state.inputEmail;\r\n        let telefonas = this.state.inputPhone;\r\n        let pareigos = this.state.inputJobPosition;\r\n        let adresas = this.state.inputAddress;\r\n        let recId = 'temp';\r\n        console.log(vardas +\" \"+ pavarde +\" \"+ pastas +\" \"+ telefonas +\" \"+ pareigos +\" \"+ adresas);\r\n        \r\n        /**/const todoRef = firebase.database().ref('ContactLists');\r\n         const kontaktasDB = {\r\n         vardas, pavarde, pastas, telefonas, pareigos, adresas,recId};\r\n    \r\n        let permId = todoRef.push(kontaktasDB).key;\r\n        todoRef.child(permId).update({recId: permId});\r\n        console.log(permId);\r\n        /**/\r\n    \r\n      }\r\n   \r\n    render() {\r\n        return (\r\n            <Modal\r\n\r\n\r\n                {...this.props}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormControl value={this.state.inputFirstName} onChange={evt => this.updateFirstNameValue(evt)}\r\n                        placeholder=\"First Name\" aria-label=\"First Name\"\r\n                    />\r\n                    <FormControl value={this.state.inputLastName} onChange={evt2 => this.updateLastNameValue(evt2)}\r\n                        placeholder=\"Last Name\" aria-label=\"Last Name\"\r\n                    />\r\n                    <FormControl value={this.state.inputEmail} onChange={evt3 => this.updateEmailValue(evt3)}\r\n                        placeholder=\"Email\" aria-label=\"Email\"\r\n                    />\r\n                    <FormControl value={this.state.inputPhone} onChange={evt4 => this.updatePhoneValue(evt4)}\r\n                        placeholder=\"Phone\" aria-label=\"Phone\"\r\n                    />\r\n                    <FormControl value={this.state.inputJobPosition} onChange={evt5 => this.updateJobPositionValue(evt5)}\r\n                        placeholder=\"Job Position\" aria-label=\"Job Position\"\r\n                    />\r\n                    <FormControl value={this.state.inputAddress} onChange={evt6 => this.updateAddressValue(evt6)}\r\n                     id=\"fname\" name=\"fname\"\r\n                        placeholder=\"Address\" aria-label=\"Address\"\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\r\n                    <Button variant=\"primary\" onClick={() => this.AddContactToDb()}>Save</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, FormControl } from 'react-bootstrap';\r\nimport firebase from './util/firebase';\r\n\r\n//let optionSet = [];\r\nexport class ProductModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.projectRef = React.createRef();\r\n\r\n    this.state = {\r\n      optionSet: [],\r\n      inputName: '',\r\n      inputPrice: '',\r\n      inputQuantity: '',\r\n      inputDescription: ''\r\n    }\r\n  }\r\n\r\n  updateNameValue(evt) {\r\n    this.setState({\r\n      inputName: evt.target.value,\r\n    })\r\n  }\r\n\r\n  updateDescriptionValue(e) {\r\n    this.setState({\r\n      inputDescription: e.target.value,\r\n    })\r\n  }\r\n\r\n  updatePriceValue(ev) {\r\n    this.setState({\r\n      inputPrice: ev.target.value,\r\n    })\r\n  }\r\n\r\n  updateQuantityValue(ev2) {\r\n    this.setState({\r\n      inputQuantity: ev2.target.value,\r\n    })\r\n  }\r\n\r\n  getProjectList(){\r\n    let optionSetlet = [];\r\n    firebase.database().ref(\"TESTINIS-ProjectsList\").on('value', (snapshot) => {\r\n      snapshot.forEach(snap => {\r\n        optionSetlet.push(snap.val().pavadinimas);\r\n      });\r\n    });\r\n     //this.setState.optionSet = optionSet;\r\n     //optionSet: this.setState({ optionSet: optionsetlet })\r\n    console.log(\"optset \" + optionSetlet);\r\n  }\r\n\r\n  AddProductToDb() {\r\n    //datos\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    let pavadinimas = this.state.inputName;\r\n    let aprasymas = this.state.inputDescription;\r\n    let kiekis = this.state.inputQuantity;\r\n    let kaina = this.state.inputPrice;\r\n    let projektas = this.projectRef.current.value;\r\n    let suma = kiekis * kaina;\r\n    let recId = 'temp';\r\n    let sukurimodata = today;\r\n    console.log(pavadinimas + \" \" + aprasymas + \" \" + kiekis + \" \" + kaina + \" \" + projektas + \" \" + suma);\r\n\r\n    /**/const todoRef = firebase.database().ref('ProductsLists');\r\n    const produktasDB = {\r\n      pavadinimas, aprasymas, kiekis, kaina, projektas, suma, recId, sukurimodata\r\n    };\r\n\r\n    let permId = todoRef.push(produktasDB).key;\r\n    todoRef.child(permId).update({ recId: permId });\r\n    //CIA KAZKUR UPDATINTI PROJEKTO SUMA\r\n\r\n    //const projDB = firebase.database().ref('TESTINIS-ProjectsList');\r\n    //let projectId = '', projectSum = '';\r\n  /*  projDB.orderByChild(\"pavadinimas\").equalTo(projektas).on(\"value\", function(snapshot) {\r\n      //console.log(\"query \" + snapshot.key);\r\n      \r\n      snapshot.forEach(function (childSnapshot) {\r\n        var childKey = childSnapshot.key;\r\n        var childData = childSnapshot.val().nuolaida;\r\n        projectId = childKey;\r\n        projectSum = childSnapshot.val().projektoSuma + suma;\r\n        console.log(\"query3 \"+ childData + \" \" + childKey);\r\n        \r\n        \r\n      \r\n    });*/\r\n      //console.log(\"query2 \" + snapshot.val().pavadinimas);\r\n    //});\r\n    //console.log(permId);\r\n    /**/\r\n\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.setState.optionSet);\r\n    return (\r\n      <Modal\r\n\r\n\r\n        {...this.props}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormControl value={this.state.inputName} onChange={evt => this.updateNameValue(evt)}\r\n            placeholder=\"Name\"\r\n            aria-label=\"Name\"\r\n          />\r\n          <FormControl value={this.state.inputPrice} onChange={ev => this.updatePriceValue(ev)}\r\n            placeholder=\"Price\"\r\n            aria-label=\"Price\"\r\n          />\r\n          <FormControl value={this.state.inputQuantity} onChange={ev2 => this.updateQuantityValue(ev2)}\r\n            placeholder=\"Quantity\"\r\n            aria-label=\"Quantity\"\r\n          />\r\n\r\n          <FormControl as=\"select\" custom ref={this.projectRef}>\r\n            <option value=\"Projektas 1\">Projektas 1</option>\r\n            <option value=\"Projektas 2\">Projektas 2</option>\r\n            <option value=\"Projektas 3\">Projektas 3</option>\r\n            <option value=\"Projektas 4\">Projektas 4</option>\r\n\r\n            {this.state.optionSet.map(data => {\r\n              return (\r\n                <option value={data}>{data}</option>\r\n              )\r\n            }\r\n            )}\r\n\r\n\r\n          </FormControl>\r\n\r\n          <FormControl value={this.state.inputDescription} onChange={e => this.updateDescriptionValue(e)}\r\n            placeholder=\"Description\" as=\"textarea\"\r\n            aria-label=\"Description\"\r\n          />\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onHide}>\r\n            Atsaukti\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => this.AddProductToDb()}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nclass EditContactForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // Here we initialize our components state\r\n        this.state = {\r\n            showForm: false\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick () {\r\n        // On click we change our state – this will trigger our `render` method\r\n        this.setState({ showForm: true });\r\n    }\r\n\r\n    renderForm () {\r\n       return (\r\n           <div className=\"testform\"> \r\n               <form id= \"add-app\">\r\n\r\n                   <label>Application Name : </label>\r\n                   <input type=\"text\"> </input>\r\n\r\n                   <label> id : </label>\r\n                   <input type=\"text\" ></input>\r\n\r\n                   <label>Server details : </label>\r\n                   <input ></input>\r\n\r\n                   <button>Create</button>\r\n              </form>\r\n          </div>\r\n       );\r\n    }\r\n\r\n    render() {\r\n        // We get the state for showing the form from our components state\r\n        const { showForm } = this.state;\r\n\r\n        return (\r\n            <div >\r\n                <h1>Manage Application</h1>\r\n                <button onClick={ this.onClick }>Add New Application</button>\r\n                <button>Change Existing Application</button>\r\n                <button>Remove Application</button>\r\n\r\n                {/* We want to show the form if the state is true */}\r\n                {showForm && this.renderForm()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContactForm;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar2 extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n        <Link to=\"/\" className=\"navbar-brand\">ExcerTracker</Link>\r\n        <div className=\"collpase navbar-collapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/\" className=\"nav-link\">Exercises</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/create\" className=\"nav-link\">Create Exercise Log</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n/*const Exercise = props => (\r\n  <tr>\r\n    <td>{props.exercise.username}</td>\r\n    <td>{props.exercise.description}</td>\r\n    <td>{props.exercise.duration}</td>\r\n    <td>{props.exercise.date.substring(0,10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\"+props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)*/\r\n\r\nexport default class ProductsList extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteExercise = this.deleteExercise.bind(this)\r\n\r\n    this.state = {exercises: []};\r\n  }*/\r\n\r\n  /*componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/')\r\n      .then(response => {\r\n        this.setState({ exercises: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteExercise(id) {\r\n    axios.delete('http://localhost:5000/exercises/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n      exercises: this.state.exercises.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  exerciseList() {\r\n    return this.state.exercises.map(currentexercise => {\r\n      return <Exercise exercise={currentexercise} deleteExercise={this.deleteExercise} key={currentexercise._id}/>;\r\n    })\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi produktu liste</p>\r\n        </div>\r\n      /*<div>\r\n        <h3>Logged Exercises</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Description</th>\r\n              <th>Duration</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.exerciseList() }\r\n          </tbody>\r\n        </table>\r\n      </div>*/\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import DatePicker from 'react-datepicker';\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class EditProduct extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/'+this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          username: response.data.username,\r\n          description: response.data.description,\r\n          duration: response.data.duration,\r\n          date: new Date(response.data.date)\r\n        })   \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(exercise);\r\n\r\n    axios.post('http://localhost:5000/exercises/update/' + this.props.match.params.id, exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi edit produkts</p>\r\n        </div>\r\n   /* <div>\r\n      <h3>Edit Exercise Log</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>*/\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import DatePicker from 'react-datepicker';\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class CreateProducts extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n            username: response.data[0].username\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(exercise);\r\n\r\n    axios.post('http://localhost:5000/exercises/add', exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi create produkts</p>\r\n        </div>\r\n    /*<div>\r\n      <h3>Create New Exercise Log</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>*/\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateProject extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username\r\n    }\r\n\r\n    console.log(user);\r\n\r\n    axios.post('http://localhost:5000/users/add', user)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      username: ''\r\n    })\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <p>tu esi create projects</p>\r\n        </div>\r\n      /*<div>\r\n        <h3>Create New User</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </div>*/\r\n    )\r\n  }\r\n}","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { render } from \"react-dom\";\n//import {Table, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Table, Button, Modal } from 'reactstrap';\n//import Table from './Table';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport { AddModal } from './AddModal.js';\nimport { Navbar, Nav, NavDropdown, InputGroup, FormControl } from 'react-bootstrap';\nimport ContactTable from './ContactTable';\nimport ProjectTable from './ProjectTable';\nimport ProductTable from './ProductTable';\n//import { ReactComponent } from '*.svg';\nimport { ContactModal } from './ContactModal.js';\nimport { ProductModal } from './ProductModal.js';\nimport EditContactForm from './EditContactForm.js';\nimport firebase from './util/firebase';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport AddProject from './AddProjectModal';\n\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Navbar2 from \"./components/navbar.component\"\nimport ProductsList from \"./components/products-list.component\";\nimport EditProduct from \"./components/edit-products.component\";\nimport CreateProduct from \"./components/create-product.component\";\nimport CreateProject from \"./components/create-project.component\";\n\n/*function Example() {\n  const [show, setShow] = useState(false);\n\n    </>\n  );\n}*/\n\n//render(<Example />);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      deps: [], addModalShow: false,\n      deps2: [], contactModalShow: false,\n      deps3: [], productModalShow: false,\n      table: 'projectTable',\n      sortAZ: true\n    }\n    //const [show, setShow] = useState(false);\n\n    //const handleClose = () => setShow(false);\n    //const handleShow = () => setShow(true);\n  }\n\n  clickHandlerContact() {\n    this.setState({\n      table: 'contactTable'\n    })\n  }\n\n  clickHandlerProject() {\n    this.setState({\n      table: 'projectTable'\n    })\n  }\n\n  clickHandlerProduct() {\n    this.setState({\n      table: 'productTable'\n    })\n  }\n\n  sort(){\n    /*bugs =*/ this.setState(prevState => ({\n      sortAZ: !prevState.sortAZ\n    }));\n    //window.location.reload(false);\n  }\n  \n\n\n\n  render() {\n    const { deps } = this.state;\n    const { deps2 } = this.state;\n    const { deps3 } = this.state;\n    let addModalClose = () => this.setState({ addModalShow: false });\n    let contactModalClose = () => this.setState({ contactModalShow: false });\n    let productModalClose = () => this.setState({ productModalShow: false });\n    let testcomponentas;\n\n    console.log(\"Sort AZ? - \" + this.state.sortAZ);\n    //====\n    /*const products2 = [\n      {\n        \"id\": \"10\",\n        \"name\": \"minivan\",\n        \"price\": 333\n        \n      },\n      {\n        \"id\": \"10\",\n        \"name\": \"station wagon\",\n        \"price\": 100\n      }\n     ];\n    const columns2 = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];*/\n    //======\n\n\n    if (this.state.table == 'projectTable') {\n      testcomponentas = <ProjectTable data3={this.state.sortAZ}/>\n    } else if (this.state.table == 'productTable') {\n      testcomponentas = <ProductTable />\n    } else {\n      testcomponentas = <ContactTable />\n    }\n\n    return (\n      \n\n     \n\n     \n\n      <div>\n        {/*nurodzius kelia urkraus tam tikra komponenta pvz editproduct*/}\n <Router>\n      <div className=\"container\">\n      <Navbar2 />\n      <br/>\n      <Route path=\"/\" exact component={ProductsList} />\n      <Route path=\"/edit/:id\" component={EditProduct} />\n      <Route path=\"/create\" component={CreateProduct} />\n      <Route path=\"/project\" component={CreateProject} />\n      </div>\n    </Router>\n\n\n        {/*<Navbar fixed=\"top\" variant=\"dark\" bg=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Sales System</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link onClick={() => this.setState({ contactModalShow: true })} href=\"#link\">Add Contact</Nav.Link>\n              <Nav.Link onClick={() => this.setState({ addModalShow: true })} href=\"#link\">Create Project</Nav.Link>\n              <Nav.Link onClick={() => this.setState({ productModalShow: true })} href=\"#link\">Add Product</Nav.Link>\n              <Nav.Link onClick={() => this.sort()} href=\"#link\">Sort</Nav.Link>\n              {/* palikti sita komentara <Nav.Link href=\"#link\">Change Date/Currency format</Nav.Link>\n              <Nav.Link href=\"#link\">About</Nav.Link>*/}\n            {/*</Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n\n        <div className=\"splitleft\">\n\n          <Nav defaultActiveKey=\"/home\" className=\"navbar\">\n\n            <Nav.Link href=\"/home\">Active</Nav.Link>\n            <Nav.Link eventKey=\"link-1\" onClick={this.clickHandlerContact.bind(this)}>Contacts</Nav.Link>\n            <Nav.Link eventKey=\"link-2\" onClick={this.clickHandlerProject.bind(this)}>Projects</Nav.Link>\n            <Nav.Link eventKey=\"link-2\" onClick={this.clickHandlerProduct.bind(this)}>Products</Nav.Link>\n            {/* palikti sita komentara <Nav.Link eventKey=\"link-2\">Link</Nav.Link>*/}\n          {/*</Nav>\n\n\n          \n\n        </div>\n\n\n        \n\n        <div className=\"splitright\">\n\n          <div style={{ margin: \"20px 20px 20px 20px\" }}>\n {/* palikti sita komentararender(<Example />);*/}\n\n        {/* palikti sita komentara <EditContactForm/>  <BootstrapTable keyField='id' data={ products2 } columns={ columns2 }/>  */}\n\n\n\n       {/* {testcomponentas}\n            \n\n          </div>\n        </div>\n\n\n        <AddModal  show={this.state.addModalShow} onHide={addModalClose} />\n        <ContactModal show={this.state.contactModalShow} onHide={contactModalClose} />\n        <ProductModal show={this.state.productModalShow} onHide={productModalClose} />*/}\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}